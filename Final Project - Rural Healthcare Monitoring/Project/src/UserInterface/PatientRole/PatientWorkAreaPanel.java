/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PatientRole;

import Business.Business;
import Business.DemoT;
import Business.Enterprise.Enterprise;
import Business.Organization.Hospital.Organization;
import Business.Organization.Hospital.PatientOrganization;
import Business.Patient.Patient;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author hpanjwani
 */
public class PatientWorkAreaPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private Business business;
    
    /**
     * Creates new form PatientWorkAreaPanel
     */
    public PatientWorkAreaPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.enterprise = enterprise;
        this.business = business;
        
        patientLabel.setText("Patient Name: " + userAccount.getUsername());
        enterpriseLabel.setText("Hospital Name: " + enterprise.getName());
        
        Patient patient = (Patient)userAccount.getEmployee();
        patient.getDisease();
        
        System.out.println(patient.getDisease());
        
//        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList())
//            if ((request.getStatus().equals("Alert Sent")) || request.getStatus().equals("Alert Received")
//                    || (request.getStatus().equals("Notified to Receptionist")) || request.getStatus().equals("Ambulance Dispatched")
//                    || (request.getStatus().equals("Medicine Prescribed"))) {
//                
//                notification();
//            }
        
           
    }
    
    public void notification() {        
        int dialogResult = JOptionPane.showConfirmDialog (this, "Your Vital Signs has been dropped from threshold.\n"
                + "Please check notification from doctor","Warning",JOptionPane.WARNING_MESSAGE);
        if(dialogResult == JOptionPane.YES_OPTION){
        } else {            
            new DemoT();
            notification();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        enterVitalBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        historyBtn = new javax.swing.JButton();
        notificationBtn = new javax.swing.JButton();
        bookingBtn = new javax.swing.JButton();
        patientLabel = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("PATIENT WORK AREA");

        jButton1.setText("Book an Appointment");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        enterVitalBtn.setText("SENSOR ENTRY");
        enterVitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterVitalBtnActionPerformed(evt);
            }
        });

        jButton3.setText("Order Medication");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        historyBtn.setText("PATIENT HISTORY");
        historyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyBtnActionPerformed(evt);
            }
        });

        notificationBtn.setText("NOTIFICATION");
        notificationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notificationBtnActionPerformed(evt);
            }
        });

        bookingBtn.setText("Upcoming Appointment");
        bookingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingBtnActionPerformed(evt);
            }
        });

        patientLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        patientLabel.setText("jLabel2");

        enterpriseLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        enterpriseLabel.setText("jLabel3");

        jButton2.setText("PRESCRIBED MEDICINE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton2)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton1)
                                        .addComponent(jButton3))
                                    .addGap(45, 45, 45)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(historyBtn)
                                        .addComponent(bookingBtn)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(notificationBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(enterVitalBtn))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(enterpriseLabel)
                            .addComponent(patientLabel))))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(patientLabel)
                .addGap(23, 23, 23)
                .addComponent(enterpriseLabel)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(bookingBtn)
                    .addComponent(notificationBtn))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(enterVitalBtn)
                    .addComponent(historyBtn))
                .addGap(39, 39, 39)
                .addComponent(jButton2)
                .addContainerGap(186, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void enterVitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterVitalBtnActionPerformed
        // TODO add your handling code here:
        SensorVitalSignTab vitalSignTab = new SensorVitalSignTab(userProcessContainer, userAccount, enterprise, business);
        userProcessContainer.add("VitalSignTab", vitalSignTab);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_enterVitalBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AppointmentPanel appointmentPanel = new AppointmentPanel(userProcessContainer, userAccount, enterprise, business);
        userProcessContainer.add("AppointmentPanel", appointmentPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        OrderMedicinePanel orderMedicinePanel = new OrderMedicinePanel(userProcessContainer, userAccount, enterprise, business);
        userProcessContainer.add("OrderMedicinePanel", orderMedicinePanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void historyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyBtnActionPerformed
        // TODO add your handling code here:
        PatientHistoryPanel patientHistoryPanel = new PatientHistoryPanel(userProcessContainer, userAccount, enterprise, business);
        userProcessContainer.add("PatientHistoryPanel", patientHistoryPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_historyBtnActionPerformed

    private void notificationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notificationBtnActionPerformed
        // TODO add your handling code here:
        AmbulanceNotificationPanel ambulanceNotificationPanel = new AmbulanceNotificationPanel(userProcessContainer, userAccount, enterprise);
        userProcessContainer.add("AmbulanceNotificationPanel", ambulanceNotificationPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_notificationBtnActionPerformed

    private void bookingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingBtnActionPerformed
        // TODO add your handling code here:
        UpcomingBookingPanel upcomingBookingPanel = new UpcomingBookingPanel(userProcessContainer, userAccount, enterprise);
        userProcessContainer.add("UpcomingBookingPanel", upcomingBookingPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_bookingBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        PrescribeMedicine prescribeMedicine = new PrescribeMedicine(userProcessContainer, userAccount, enterprise);
        userProcessContainer.add("PrescribeMedicine", prescribeMedicine);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookingBtn;
    private javax.swing.JButton enterVitalBtn;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JButton historyBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton notificationBtn;
    private javax.swing.JLabel patientLabel;
    // End of variables declaration//GEN-END:variables
}
