/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PatientRole;

import Business.Business;
import Business.Enterprise.Enterprise;
import Business.Organization.Hospital.DoctorOrganization;
import Business.Organization.Hospital.Organization;
import Business.Patient.AirQuality;
import Business.Patient.Patient;
import Business.Patient.VitalSign;
import Business.Patient.VitalSignHistory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.UserPriviligeWorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Timestamp;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author hpanjwani
 */
public class SensorVitalSignTab extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private Business business;

    private VitalSignHistory vitalSignHistory;
    private VitalSign vitalSign;
    private Patient patient;
    private int age;
    private String status;

    /**
     * Creates new form VitalSignTab
     */
    public SensorVitalSignTab(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.enterprise = enterprise;
        this.business = business;
        
        hospitalName.setText("Hospital Name: "  + enterprise.getName());
        docLabel.setText("Doctor Name  Dr. " + userAccount.getUsername());

        patientLabel.setText("Patient Name: " + userAccount.getUsername());

        patient = (Patient) userAccount.getEmployee();
        age = patient.getAge();
        vitalSignHistory = patient.getVitalSignList();

        populateBloodGroup();
        
//        //  Air Quality ComboBox Generation
//        populatePMCombo();
//        populatePMTenCombo();

    }

    public void populateBloodGroup() {
        bloodGroupComboBox.removeAllItems();

        bloodGroupComboBox.addItem("A");
        bloodGroupComboBox.addItem("B");
        bloodGroupComboBox.addItem("AB");
        bloodGroupComboBox.addItem("O");
        bloodGroupComboBox.addItem("B-");
        bloodGroupComboBox.addItem("A-");
        bloodGroupComboBox.addItem("AB-");
        bloodGroupComboBox.addItem("A+");
        bloodGroupComboBox.addItem("B+");
        bloodGroupComboBox.addItem("AB+");
    }

//    public void populatePMCombo() {
//        pmComboBox.removeAllItems();
//
//        pmComboBox.addItem("Low");
//        pmComboBox.addItem("Medium");
//        pmComboBox.addItem("High");
//    }

//    public void populatePMTenCombo() {
//        pmTenComboBox.removeAllItems();
//
//        pmTenComboBox.addItem("Low");
//        pmTenComboBox.addItem("Medium");
//        pmTenComboBox.addItem("High");
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patientTabbedPane = new javax.swing.JTabbedPane();
        patientVitalSignPanel = new javax.swing.JPanel();
        saveBtn = new javax.swing.JButton();
        generateBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        timeTextField = new javax.swing.JLabel();
        hemoTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        weightTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        respRateTextField = new javax.swing.JTextField();
        statusLabel = new javax.swing.JLabel();
        glucoseTextField = new javax.swing.JTextField();
        pulseTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bpTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        plateletsTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        hospitalName = new javax.swing.JLabel();
        patientLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bp = new javax.swing.JLabel();
        heartRate = new javax.swing.JLabel();
        tempTextField = new javax.swing.JTextField();
        heartRateTextField = new javax.swing.JTextField();
        respRate = new javax.swing.JLabel();
        bloodGroupComboBox = new javax.swing.JComboBox();
        weight = new javax.swing.JLabel();
        Hint = new javax.swing.JButton();
        docLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        generateBtn.setText("Generate");
        generateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateBtnActionPerformed(evt);
            }
        });

        backBtn.setIcon(new javax.swing.ImageIcon("/Users/hpanjwani/Documents/NEU/1st Sem/5100 AED Lab/panjwani_hari_001664735/Project/images/back.png")); // NOI18N
        backBtn.setToolTipText("Go to Previous Page");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Time of detail entered:");

        timeTextField.setText("time");

        hemoTextField.setEditable(false);

        jLabel5.setText("Weight (in pounds):");

        weightTextField.setEditable(false);

        jLabel4.setText("Systolic Blood Pressure:");

        respRateTextField.setEditable(false);
        respRateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                respRateTextFieldActionPerformed(evt);
            }
        });

        glucoseTextField.setEditable(false);

        pulseTextField.setEditable(false);

        jLabel2.setText("Respiration Rate:");

        bpTextField.setEditable(false);

        jLabel15.setText("Blood Group");

        jLabel17.setText("Body Temperature");

        jLabel14.setText("Blood Platelets");

        plateletsTextField.setEditable(false);

        jLabel12.setText("Blood Glucose Level");

        hospitalName.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        hospitalName.setText("<hospitalName>");

        patientLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        patientLabel.setText("<patientName>");

        jLabel13.setText("Hemoglobin Level");

        jLabel16.setText("Pulse");

        jLabel3.setText("Heart Rate:");

        tempTextField.setEditable(false);

        heartRateTextField.setEditable(false);

        bloodGroupComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Hint.setText("Hint");
        Hint.setToolTipText("Normal Range");
        Hint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HintActionPerformed(evt);
            }
        });

        docLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        docLabel.setText("<doctorName>");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("RECORD VITAL SIGN");

        javax.swing.GroupLayout patientVitalSignPanelLayout = new javax.swing.GroupLayout(patientVitalSignPanel);
        patientVitalSignPanel.setLayout(patientVitalSignPanelLayout);
        patientVitalSignPanelLayout.setHorizontalGroup(
            patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                        .addGap(430, 430, 430)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientVitalSignPanelLayout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(212, 212, 212)
                        .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(respRate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(heartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                                .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, patientVitalSignPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel12)
                                            .addGap(18, 18, 18)
                                            .addComponent(glucoseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                                            .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel13)
                                                .addComponent(jLabel15))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(bloodGroupComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(hemoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                                                    .addGap(6, 6, 6)
                                                    .addComponent(generateBtn))
                                                .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(plateletsTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                                    .addComponent(pulseTextField, javax.swing.GroupLayout.Alignment.LEADING)))))
                                    .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(docLabel)
                                            .addComponent(patientLabel)
                                            .addComponent(hospitalName))))
                                .addGap(42, 42, 42)
                                .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, patientVitalSignPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(heartRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                                                        .addComponent(respRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE))
                                                    .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                                                        .addComponent(bpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(bp, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                                                    .addGap(2, 2, 2)
                                                    .addComponent(saveBtn)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                                                    .addComponent(Hint)))))))
                            .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                                .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                                        .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel14))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel17))
                                        .addGap(45, 45, 45)
                                        .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                                        .addComponent(backBtn)
                                        .addGap(77, 77, 77)
                                        .addComponent(jLabel6)
                                        .addGap(5, 5, 5)
                                        .addComponent(timeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 124, Short.MAX_VALUE)))
                                .addGap(154, 154, 154)))))
                .addGap(0, 241, Short.MAX_VALUE))
        );
        patientVitalSignPanelLayout.setVerticalGroup(
            patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                        .addComponent(docLabel)
                        .addGap(18, 18, 18)
                        .addComponent(hospitalName)
                        .addGap(18, 18, 18)
                        .addComponent(patientLabel)))
                .addGap(18, 18, 18)
                .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(respRate, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(glucoseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(respRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(hemoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(heartRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(heartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(bloodGroupComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(bpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bp, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                        .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel16)
                                .addComponent(jLabel5)
                                .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(tempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)))
                    .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                        .addComponent(pulseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(plateletsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backBtn)
                    .addGroup(patientVitalSignPanelLayout.createSequentialGroup()
                        .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Hint)
                                .addComponent(saveBtn))
                            .addComponent(generateBtn))
                        .addGap(24, 24, 24)
                        .addGroup(patientVitalSignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(timeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        patientTabbedPane.addTab("Patient Vital Sign", patientVitalSignPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(patientTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patientTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void generateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBtnActionPerformed
        // TODO add your handling code here:
        if (patient != null) {

            Random rn = new Random();

            if (age >= 1 && age <= 3) {
                heartRateTextField.setText(String.valueOf(rn.nextFloat() * (140 - 70) + 70));
                respRateTextField.setText(String.valueOf(rn.nextFloat() * (40 - 10) + 10));
                bpTextField.setText(String.valueOf(rn.nextFloat() * (120 - 70) + 70));
                weightTextField.setText(String.valueOf(rn.nextFloat() * (37 - 18) + 18));
                tempTextField.setText(String.valueOf(rn.nextFloat() * (100 - 10) + 10));
                glucoseTextField.setText(String.valueOf(rn.nextFloat() * (130 - 70) + 70));
                hemoTextField.setText(String.valueOf(rn.nextFloat() * (27 - 3) + 3));
                pulseTextField.setText(String.valueOf(rn.nextInt(110 - 50) + 50));
                plateletsTextField.setText(String.valueOf(rn.nextFloat() * (460 - 50) + 50));
            } else if (age >= 4 && age <= 5) {
                heartRateTextField.setText(String.valueOf(rn.nextFloat() * (130 - 70) + 70));
                respRateTextField.setText(String.valueOf(rn.nextFloat() * (40 - 10) + 10));
                bpTextField.setText(String.valueOf(rn.nextFloat() * (130 - 70) + 70));
                weightTextField.setText(String.valueOf(rn.nextFloat() * (50 - 20) + 20));
                tempTextField.setText(String.valueOf(rn.nextFloat() * (100 - 10) + 10));
                glucoseTextField.setText(String.valueOf(rn.nextFloat() * (130 - 70) + 70));
                hemoTextField.setText(String.valueOf(rn.nextFloat() * (27 - 3) + 3));
                pulseTextField.setText(String.valueOf(rn.nextInt(110 - 50) + 50));
                plateletsTextField.setText(String.valueOf(rn.nextFloat() * (460 - 50) + 50));
            } else if (age >= 6 && age <= 12) {
                heartRateTextField.setText(String.valueOf(rn.nextFloat() * (120 - 60.0) + 60));
                respRateTextField.setText(String.valueOf(rn.nextFloat() * (40 - 10) + 10));
                bpTextField.setText(String.valueOf(rn.nextFloat() * (130 - 70) + 70));
                weightTextField.setText(String.valueOf(rn.nextFloat() * (100 - 30) + 30));
                tempTextField.setText(String.valueOf(rn.nextFloat() * (100 - 10) + 10));
                glucoseTextField.setText(String.valueOf(rn.nextFloat() * (130 - 70) + 70));
                hemoTextField.setText(String.valueOf(rn.nextFloat() * (27 - 3) + 3));
                pulseTextField.setText(String.valueOf(rn.nextInt(110 - 50) + 50));
                plateletsTextField.setText(String.valueOf(rn.nextFloat() * (460 - 50) + 50));
            } else {

                heartRateTextField.setText(String.valueOf(rn.nextFloat() * (115 - 45) + 45));
                respRateTextField.setText(String.valueOf(rn.nextFloat() * (30 - 2) + 30));
                bpTextField.setText(String.valueOf(rn.nextFloat() * (130 - 100) + 100));
                weightTextField.setText(String.valueOf(rn.nextFloat() * (110 - 10) + 10));
                tempTextField.setText(String.valueOf(rn.nextFloat() * (100 - 10) + 10));
                glucoseTextField.setText(String.valueOf(rn.nextFloat() * (130 - 70) + 70));
                hemoTextField.setText(String.valueOf(rn.nextFloat() * (27 - 3) + 3));
                pulseTextField.setText(String.valueOf(rn.nextInt(110 - 50) + 50));
                plateletsTextField.setText(String.valueOf(rn.nextFloat() * (460 - 50) + 50));
            }
        }
    }//GEN-LAST:event_generateBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:

        Timestamp timeStamp = new Timestamp(new Date().getTime());
        String time = String.valueOf(timeStamp);
        timeTextField.setText(String.valueOf(time));

        if (age == 0) {
            JOptionPane.showMessageDialog(this, "Please Enter Patient details!!", "Error", JOptionPane.OK_OPTION);
            resetFields();
        } else {
            if (respRateTextField.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Respiration Rate cannot be blank!", "Error", JOptionPane.OK_OPTION);
                respRateTextField.setBackground(Color.red);
            } else if (!respRateTextField.getText().matches("^(\\d+\\.)?\\d+$")) {
                JOptionPane.showMessageDialog(this, "Respiration Rate can only have digits!", "Error", JOptionPane.OK_OPTION);
                respRateTextField.setBackground(Color.red);
            } else if (heartRateTextField.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Heart Rate cannot be blank!", "Error", JOptionPane.OK_OPTION);
                heartRateTextField.setBackground(Color.red);
            } else if (!heartRateTextField.getText().matches("^(\\d+\\.)?\\d+$")) {
                JOptionPane.showMessageDialog(this, "Heart Rate can only have digits!", "Error", JOptionPane.OK_OPTION);
                heartRateTextField.setBackground(Color.red);
            } else if (bpTextField.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Blood Pressure cannot be blank!", "Error", JOptionPane.OK_OPTION);
                bpTextField.setBackground(Color.red);
            } else if (!bpTextField.getText().matches("^(\\d+\\.)?\\d+$")) {
                JOptionPane.showMessageDialog(this, "Blood Pressure can only have digits!", "Error", JOptionPane.OK_OPTION);
                bpTextField.setBackground(Color.red);
            } else if (weightTextField.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Weight cannot be blank!", "Error", JOptionPane.OK_OPTION);
                weightTextField.setBackground(Color.red);
            } else if (!weightTextField.getText().matches("^(\\d+\\.)?\\d+$")) {
                JOptionPane.showMessageDialog(this, "Weight can only have digits!", "Error", JOptionPane.OK_OPTION);
                weightTextField.setBackground(Color.red);
            } else {

                Float resp = Float.parseFloat(respRateTextField.getText());
                Float heart = Float.parseFloat(heartRateTextField.getText());
                Float bp = Float.parseFloat(bpTextField.getText());
                Float weight = Float.parseFloat(weightTextField.getText());

                vitalSign = vitalSignHistory.addVitalSign();

                vitalSign.setRespRate(resp);
                vitalSign.setHeartRate(heart);
                vitalSign.setBp(bp);
                vitalSign.setWeight(weight);
                vitalSign.setTime(time);
                vitalSign.setGlucose(Float.parseFloat(glucoseTextField.getText()));
                vitalSign.setHemo(Float.parseFloat(hemoTextField.getText()));
                vitalSign.setBloodGroup((String) bloodGroupComboBox.getSelectedItem());
                vitalSign.setPulse(Integer.parseInt(pulseTextField.getText()));
                vitalSign.setPlatelets(Float.parseFloat(plateletsTextField.getText()));
                vitalSign.setTemp(Float.parseFloat(tempTextField.getText()));

                if (age >= 1 && age <= 3) {
                    if (((resp >= 20) && (resp <= 30))
                            && (heart >= 80) && (heart <= 130)
                            && (bp >= 80) && (bp <= 110)
                            && (weight >= 22) && (weight <= 31)) {
                        status = "Normal";
                    } else {
                        status = "Abnormal";
                    }
                } else if (age >= 4 && age <= 5) {
                    if (((resp >= 20) && (resp <= 30))
                            && (heart >= 80) && (heart <= 120)
                            && (bp >= 80) && (bp <= 110)
                            && (weight >= 31) && (weight <= 40)) {
                        status = "Normal";
                    } else {
                        status = "Abormal";
                    }
                } else if (age >= 6 && age <= 12) {
                    if (((resp >= 20) && (resp <= 30))
                            && (heart >= 70) && (heart <= 110)
                            && (bp >= 80) && (bp <= 120)
                            && (weight >= 41) && (weight <= 92)) {
                        status = "Normal";
                    } else {
                        status = "Abnormal";
                    }
                } else {
                    if (((resp >= 12) && (resp <= 20))
                            && (heart >= 55) && (heart <= 105)
                            && (bp >= 110) && (bp <= 120)
                            && (weight > 110)) {
                        status = "Normal";
                    } else {
                        status = "Abnormal";
                    }
                }

                JOptionPane.showMessageDialog(this, "VitalSign Record is successfully saved!", "Information", JOptionPane.INFORMATION_MESSAGE);
                resetFields();

                if (status.equals("Abnormal")) {

                    UserAccount ua = patient.getpDocName();

                    UserPriviligeWorkRequest request_alert = new UserPriviligeWorkRequest();
                    request_alert.setMessage("Patient vital sign are below the normal level");
                    request_alert.setPatient(patient);
                    request_alert.setStatus("Alert Sent");
                    request_alert.setReceiver(ua);

                    Organization org = null;
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (organization instanceof DoctorOrganization) {
                            org = organization;
                            break;
                        }
                    }

                    if (org != null) {
                        org.getWorkQueue().getWorkRequestList().add(request_alert);
                        ua.getWorkQueue().getWorkRequestList().add(request_alert);
                        userAccount.getWorkQueue().getWorkRequestList().add(request_alert);
                    }
                }

//                patientTabbedPane.setEnabledAt(1, true);
//                patientTabbedPane.setSelectedIndex(1);
//                patientTabbedPane.setEnabledAt(0, false);
            }
        }
    }

    public void resetFields() {
        respRateTextField.setText("");
        respRateTextField.setBackground(Color.white);
        heartRateTextField.setText("");
        heartRateTextField.setBackground(Color.white);
        bpTextField.setText("");
        bpTextField.setBackground(Color.white);
        weightTextField.setText("");
        weightTextField.setBackground(Color.white);
        glucoseTextField.setText("");
        glucoseTextField.setBackground(Color.white);
        hemoTextField.setText("");
        hemoTextField.setBackground(Color.white);
        bloodGroupComboBox.setSelectedIndex(0);
        pulseTextField.setText("");
        pulseTextField.setBackground(Color.white);
        plateletsTextField.setText("");
        plateletsTextField.setBackground(Color.white);
        tempTextField.setText("");
        tempTextField.setBackground(Color.white);
    }//GEN-LAST:event_saveBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void respRateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_respRateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_respRateTextFieldActionPerformed

    private void HintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HintActionPerformed
        // TODO add your handling code here:

        statusLabel.setText("Normal Status");

        if ((age >= 1) && (age <= 3)) {
            respRate.setText("20-30");
            heartRate.setText("80-130");
            weight.setText("80-110");
            bp.setText("22-31");
        } else if ((age >= 4) && (age <= 5)) {
            respRate.setText("20-30");
            heartRate.setText("80-120");
            weight.setText("80-110");
            bp.setText("31-40");
        } else if ((age >= 6) && (age <= 12)) {
            respRate.setText("20-30");
            heartRate.setText("70-110");
            weight.setText("80-120");
            bp.setText("41-92");
        } else {
            respRate.setText("12-20");
            heartRate.setText("55-105");
            weight.setText("110-120");
            bp.setText("> 110");
        }
    }//GEN-LAST:event_HintActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Hint;
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox bloodGroupComboBox;
    private javax.swing.JLabel bp;
    private javax.swing.JTextField bpTextField;
    private javax.swing.JLabel docLabel;
    private javax.swing.JButton generateBtn;
    private javax.swing.JTextField glucoseTextField;
    private javax.swing.JLabel heartRate;
    private javax.swing.JTextField heartRateTextField;
    private javax.swing.JTextField hemoTextField;
    private javax.swing.JLabel hospitalName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel patientLabel;
    private javax.swing.JTabbedPane patientTabbedPane;
    private javax.swing.JPanel patientVitalSignPanel;
    private javax.swing.JTextField plateletsTextField;
    private javax.swing.JTextField pulseTextField;
    private javax.swing.JLabel respRate;
    private javax.swing.JTextField respRateTextField;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTextField tempTextField;
    private javax.swing.JLabel timeTextField;
    private javax.swing.JLabel weight;
    private javax.swing.JTextField weightTextField;
    // End of variables declaration//GEN-END:variables

}
