/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminRole;

import Business.Business;
import Business.Person.Person;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Hospital.Organization;
import Business.Role.Hospital.HospitalAdminRole;
import Business.Role.Pharmacy.PharmacyAdminRole;
import Business.UserAccount.UserAccount;
import Business.Validation.Validation;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.text.JTextComponent;

/**
 *
 * @author hpanjwani
 */
public class ManageEnterpriseAdminPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Business business;
    Validation v;

    /**
     * Creates new form ManageEnterpriseAdminPanel
     */
    public ManageEnterpriseAdminPanel(JPanel userProcessContainer, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        v = new Validation();

        nameLabel.setText("Welcome : Northeastern");

        populateEnterpriseTable();
        populateNetworkComboBox();
    }

    public void populateEnterpriseTable() {

        DefaultTableModel model = (DefaultTableModel) enterpriseTable.getModel();
        model.setRowCount(0);

        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise.getName();
                    row[1] = network.getName();
                    row[2] = userAccount.getUsername();

                    model.addRow(row);
                }
            }
        }
    }

    private void populateNetworkComboBox() {
        networkComboBox.removeAllItems();

        for (Network network : business.getNetworkList()) {
            networkComboBox.addItem(network);
        }
    }

    private void populateEnterpriseComboBox(Network network) {
        enterpriseComboBox.removeAllItems();

        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            enterpriseComboBox.addItem(enterprise);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseTable = new javax.swing.JTable();
        networkComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        enterpriseComboBox = new javax.swing.JComboBox();
        usernameTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        passwordPasswordField = new javax.swing.JPasswordField();
        nameTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        passLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        confirmLabel = new javax.swing.JLabel();
        confirmPasswordField = new javax.swing.JPasswordField();

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/hpanjwani/Documents/NEU/1st Sem/5100 AED Lab/panjwani_hari_001664735/Project/images/Enterprise_banner.jpeg")); // NOI18N
        jLabel2.setToolTipText("Enterprise Admin Panel");

        enterpriseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        enterpriseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                enterpriseTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(enterpriseTable);

        networkComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Network");

        jLabel3.setText("Enterprise");

        enterpriseComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        usernameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameTextFieldFocusLost(evt);
            }
        });
        usernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Username");

        jLabel5.setText("Password");

        passwordPasswordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordPasswordFieldFocusLost(evt);
            }
        });

        nameTextField.setEditable(false);

        jLabel6.setText("Selected Enterprise");

        backJButton.setIcon(new javax.swing.ImageIcon("/Users/hpanjwani/Documents/NEU/1st Sem/5100 AED Lab/panjwani_hari_001664735/Project/images/back.png")); // NOI18N
        backJButton.setToolTipText("Go to Previous Page");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel7.setText("Rural Healthcare Monitoring System");

        nameLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        nameLabel.setText("jLabel3");

        jLabel8.setText("Confirm Password");

        confirmPasswordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                confirmPasswordFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(406, 406, 406)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(nameLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(78, 78, 78)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(52, 52, 52)
                                                .addComponent(enterpriseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel4)
                                                    .addGap(52, 52, 52)
                                                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(submitJButton)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel5)
                                                        .addGap(54, 54, 54)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(confirmPasswordField)
                                                            .addComponent(passwordPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(62, 62, 62)
                                                .addComponent(networkComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(191, 191, 191)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(userNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                                            .addComponent(passLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(confirmLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(backJButton))))))
                .addContainerGap(551, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nameLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(networkComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(enterpriseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(passwordPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(confirmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(submitJButton))
                .addContainerGap(119, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void networkComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkComboBoxActionPerformed

        Network network = (Network) networkComboBox.getSelectedItem();
        if (network != null) {
            populateEnterpriseComboBox(network);
        }
    }//GEN-LAST:event_networkComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaPanel sysAdminwjp = (SystemAdminWorkAreaPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        int flag = 0;
        String username = usernameTextField.getText();
        String password = String.valueOf(passwordPasswordField.getPassword());
        String name = nameTextField.getText();

        if (!(v.checkForAlphabetsAndDigits(usernameTextField, userNameLabel))) {
            userNameLabel.setText("Username will only have alphabets and digits!");
            return;
        } else if (String.valueOf(passwordPasswordField.getPassword()).isEmpty()) {
            passLabel.setText("Password cannot be blank!");
            passwordPasswordField.setBackground(Color.yellow);
            return;
        } else if (String.valueOf(confirmPasswordField.getPassword()).isEmpty()) {
            confirmLabel.setText("Confirm Password cannot be blank!");
            confirmPasswordField.setBackground(Color.yellow);
            return;
        } else if (!(String.valueOf(confirmPasswordField.getPassword()).equals(String.valueOf(passwordPasswordField.getPassword())))) {
            confirmLabel.setText("Password and Confirm password are not same");
            confirmPasswordField.setBackground(Color.yellow);
        } else {
            Enterprise enterprise = (Enterprise) enterpriseComboBox.getSelectedItem();

            Person employee = enterprise.getPersonDirectory().createPerson(name);

            UserAccount account = null;

            for (Network network : business.getNetworkList()) {
                for (Enterprise enterprise1 : network.getEnterpriseDirectory().getEnterpriseList()) {
                    for (UserAccount accoun : enterprise1.getUserAccountDirectory().getUserAccountList()) {
                        if (accoun.getUsername().equalsIgnoreCase(username)) {
                            JOptionPane.showMessageDialog(this, "User Account Already Exists!!!", "ERROR", JOptionPane.ERROR_MESSAGE);
                            flag = 1;
                            return;
                        }
                    }
                }
            }

            if (flag == 0) {
                if (enterprise.getEnterpriseType().getValue().equals(Enterprise.EnterpriseType.Hospital.getValue())) {
                    account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new HospitalAdminRole());
                } else if (enterprise.getEnterpriseType().getValue().equals(Enterprise.EnterpriseType.Pharmacy.getValue())) {
                    account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new PharmacyAdminRole());
                }
            }

//        if (flag == 0) {
//            Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
//            UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
//            usernameTxtField.setText("");
//            passwordTxtField.setText("");
//            nameAdminTxtField.setText("");
//        }
            populateEnterpriseTable();

            userNameLabel.setText("");
            usernameTextField.setText("");
            usernameTextField.setBackground(Color.white);
            passwordPasswordField.setText("");
            passLabel.setText("");
            passwordPasswordField.setBackground(Color.white);
            confirmLabel.setText("");
            confirmPasswordField.setText("");
            confirmPasswordField.setBackground(Color.white);
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void enterpriseTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterpriseTableMousePressed
        // TODO add your handling code here:
        int selectedRow = enterpriseTable.getSelectedRow();

        TableCellRenderer renderer = enterpriseTable.getCellRenderer(selectedRow, 0);
        Component component = enterpriseTable.prepareRenderer(renderer, selectedRow, 0);
        Object value = (String) enterpriseTable.getModel().getValueAt(selectedRow, 0);

        nameTextField.setText(String.valueOf(value));
    }//GEN-LAST:event_enterpriseTableMousePressed

    private void usernameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTextFieldFocusLost
        // TODO add your handling code here:
        final JTextComponent c = (JTextComponent) evt.getSource();
        String s = c.getText();

        if (evt.isTemporary()) {
            return;
        }
        if (!(s.matches("[a-zA-Z0-9]+"))) {
            userNameLabel.setText("Username will only have alphabets and digits");
            usernameTextField.setBackground(Color.yellow);
            return;
        } else if (s.trim().isEmpty()) {
            userNameLabel.setText("Username cannot be blank");
            usernameTextField.setBackground(Color.yellow);
            return;
        } else {
            usernameTextField.setBackground(Color.white);
        }
    }//GEN-LAST:event_usernameTextFieldFocusLost

    private void passwordPasswordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordPasswordFieldFocusLost
        // TODO add your handling code here:
        final JTextComponent c = (JTextComponent) evt.getSource();
        String s = c.getText();

        if (evt.isTemporary()) {
            return;
        }

        if (s.trim().isEmpty()) {
            passLabel.setText("Password cannot be blank");
            passwordPasswordField.setBackground(Color.yellow);
        } else {
            passLabel.setText("");
            passwordPasswordField.setBackground(Color.white);
        }
    }//GEN-LAST:event_passwordPasswordFieldFocusLost

    private void confirmPasswordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPasswordFieldFocusLost
        // TODO add your handling code here:
        final JTextComponent c = (JTextComponent) evt.getSource();
        String s = c.getText();

        if (evt.isTemporary()) {
            return;
        }

        if (s.trim().isEmpty()) {
            confirmLabel.setText("Confirm Password cannot be blank");
            confirmPasswordField.setBackground(Color.yellow);
        } else if (!(s.equals(String.valueOf(passwordPasswordField.getPassword())))) {
            confirmLabel.setText("Password and Confirm password are not same");
            confirmPasswordField.setBackground(Color.yellow);
        } else {
            confirmLabel.setText("");
            confirmPasswordField.setBackground(Color.white);
        }
    }//GEN-LAST:event_confirmPasswordFieldFocusLost

    private void usernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel confirmLabel;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JComboBox enterpriseComboBox;
    private javax.swing.JTable enterpriseTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JComboBox networkComboBox;
    private javax.swing.JLabel passLabel;
    private javax.swing.JPasswordField passwordPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
