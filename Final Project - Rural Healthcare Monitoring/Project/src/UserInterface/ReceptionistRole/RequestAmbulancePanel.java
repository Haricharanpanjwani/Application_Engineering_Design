/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ReceptionistRole;

import com.twilio.sdk.TwilioRestClient;
import com.twilio.sdk.TwilioRestException;
import com.twilio.sdk.resource.factory.MessageFactory;
import com.twilio.sdk.resource.instance.Message;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

import Business.Enterprise.Enterprise;
import Business.Organization.Hospital.Organization;
import Business.Organization.Hospital.PatientOrganization;
import Business.Organization.Hospital.ReceptionistOrganization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.UserPriviligeWorkRequest;
import Business.WorkQueue.WorkRequest;
import UserInterface.DoctorRole.ActionPanel;
import UserInterface.MainJFrame;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author hpanjwani
 */
public class RequestAmbulancePanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private ReceptionistOrganization recOrganization;

    /**
     * Creates new form RequestAmbulancePanel
     */
    public RequestAmbulancePanel(JPanel userProcessContainer, UserAccount userAccount, ReceptionistOrganization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.recOrganization = organization;
        this.enterprise = enterprise;
        
        recLabel.setText(("Receptionist Name: " + userAccount.getUsername()));
        hospitalLabel.setText("Hospital Name: " + enterprise.getName() );

        populateRequestTable();
    }

    public void populateRequestTable() {

        DefaultTableModel model = (DefaultTableModel) requestTable.getModel();
        model.setRowCount(0);
//alert sent, Alert Received, Notified to Receptionist, Ambulance Dispatched, Patient Notified
        for (WorkRequest request : recOrganization.getWorkQueue().getWorkRequestList()) {
            if ((request.getStatus().equals("Alert Sent")) || request.getStatus().equals("Alert Received")
                    || (request.getStatus().equals("Notified to Receptionist")) || request.getStatus().equals("Ambulance Dispatched")
                    ||request.getStatus().equals("Patient Notified")) {
            Object[] row = new Object[6];
            //request.setStatus("RequestAmbulance");
            //request.setMessage("")
            row[0] = request;
            row[1] = request.getSender();
            row[2] = request.getReceiver();
            row[3] = ((UserPriviligeWorkRequest) request).getPatient();
            row[4] = request.getRequestDate();
            row[5] = request.getStatus();

            model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        dispatchBtn = new javax.swing.JButton();
        recLabel = new javax.swing.JLabel();
        hospitalLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Doctor Name", "Receptionist Name", "Patient Name", "Request Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestTable.setToolTipText("Ambulance Request Panel");
        requestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                requestTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(requestTable);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("AMBULANCE REQUESTED PANEL");

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        dispatchBtn.setIcon(new javax.swing.ImageIcon("/Users/hpanjwani/Documents/NEU/1st Sem/5100 AED Lab/panjwani_hari_001664735/Project/images/sms.jpeg")); // NOI18N
        dispatchBtn.setToolTipText("DISPATCH AMBULANCE");
        dispatchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispatchBtnActionPerformed(evt);
            }
        });

        recLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        recLabel.setText("jLabel2");

        hospitalLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        hospitalLabel.setText("jLabel2");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/hpanjwani/Documents/NEU/1st Sem/5100 AED Lab/panjwani_hari_001664735/Project/images/ambulance_banner.png")); // NOI18N
        jLabel2.setToolTipText("Ambulance Requested");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(93, 93, 93)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(hospitalLabel)
                                .addComponent(recLabel)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(backBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dispatchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(176, 176, 176)))
                .addGap(273, 273, 273))
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(recLabel)
                .addGap(18, 18, 18)
                .addComponent(hospitalLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backBtn)
                    .addComponent(dispatchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestTableMousePressed
        // TODO add your handling code here:
        int selectedRow = requestTable.getSelectedRow();

        TableCellRenderer renderer = requestTable.getCellRenderer(selectedRow, 5);
        Component component = requestTable.prepareRenderer(renderer, selectedRow, 5);
        Object value = (String) requestTable.getModel().getValueAt(selectedRow, 5);

        if (value.toString().equals("Notified to Receptionist")) {
            dispatchBtn.setEnabled(true);
        }
        else if(value.toString().equals("Ambulance Dispatched"))   {
            dispatchBtn.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Request is already completed!", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
        } else  {
            dispatchBtn.setEnabled(false);
        }
    }//GEN-LAST:event_requestTableMousePressed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void dispatchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispatchBtnActionPerformed

        int selectedRow = requestTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row!!", "WARNING", JOptionPane.WARNING_MESSAGE);
            return;
        } else {

            UserPriviligeWorkRequest request_notify = (UserPriviligeWorkRequest) requestTable.getValueAt(selectedRow, 0);

            Patient patient = ((UserPriviligeWorkRequest) request_notify).getPatient();

            //request_alert.setMessage("Ambulance request for " + patient);
            request_notify.setReceiver(userAccount);
            request_notify.setStatus("Ambulance Dispatched");

            //for(UserAccount ua : p)
            Organization org = null;
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof PatientOrganization) {
                    org = organization;
                    break;
                }
            }

            if (org != null) {
                for (UserAccount ua : org.getUserAccountDirectory().getUserAccountList()) {
                    if (ua.getEmployee().equals(patient)) {
                        ua.getWorkQueue().getWorkRequestList().add(request_notify);
                        break;
                    }
                }
            }

            userAccount.getWorkQueue().getWorkRequestList().add(request_notify);

            populateRequestTable();

            try {
                TwilioRestClient client = new TwilioRestClient("ACed9063d440a1ce9ac3a8e17956d636d0", "12286f5126a24e62dcc171c1e3444901");

                // Build the parameters 
                List<NameValuePair> params = new ArrayList<NameValuePair>();
                params.add(new BasicNameValuePair("To", "+18577076049"));
                params.add(new BasicNameValuePair("From", "+12013405582"));
                params.add(new BasicNameValuePair("Body", "Ambulance has been Dispatched!!"));

                MessageFactory messageFactory = client.getAccount().getMessageFactory();
                Message message = messageFactory.create(params);
                System.out.println("Message Sent!!");

            } catch (TwilioRestException ex) {
                Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(this, "Request for Ambulance has been received by Receptionist!!", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_dispatchBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton dispatchBtn;
    private javax.swing.JLabel hospitalLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel recLabel;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
