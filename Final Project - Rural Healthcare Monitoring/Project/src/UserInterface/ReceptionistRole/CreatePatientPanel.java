/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ReceptionistRole;

import Business.Business;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Hospital.DoctorOrganization;
import Business.Organization.Hospital.Organization;
import Business.Organization.Hospital.PatientOrganization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.UserPriviligeWorkRequest;
import UserInterface.MainJFrame;
import com.twilio.sdk.TwilioRestClient;
import com.twilio.sdk.TwilioRestException;
import com.twilio.sdk.resource.factory.MessageFactory;
import com.twilio.sdk.resource.instance.Message;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.text.JTextComponent;
import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

/**
 *
 * @author hpanjwani
 */
public class CreatePatientPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private PatientOrganization patientOrganization;
    private DoctorOrganization docOrganization;
    private Enterprise enterprise;
    private Business business;

    private String gender = null;
    private String ePattern = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";

    /**
     * Creates new form CreatePatient
     */
    public CreatePatientPanel(JPanel userProcessContainer, UserAccount userAccount, PatientOrganization patientOrganization, Enterprise enterprise, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patientOrganization = patientOrganization;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.business = business;

        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof DoctorOrganization) {
                docOrganization = (DoctorOrganization) org;
            }
        }

        populateDocCombo();
        populateCityCombo();
    }

    public void populateCityCombo() {
        cityComboBox.removeAllItems();

        for (Network network : business.getNetworkList()) {
            cityComboBox.addItem(network);
        }
    }

    public void populateDocCombo() {
        docComboBox.removeAllItems();

        for (UserAccount ua : docOrganization.getUserAccountDirectory().getUserAccountList()) {
            docComboBox.addItem(ua);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        createBtn = new javax.swing.JButton();
        backBtn1 = new javax.swing.JButton();
        ageTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pharmacyTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        docComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        streetAddressTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        zipCodeTextField = new javax.swing.JTextField();
        occupationTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        phoneNumberTextField = new javax.swing.JTextField();
        dobTextField = new com.toedter.calendar.JDateChooser();
        cityComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        number = new javax.swing.JLabel();
        firstName = new javax.swing.JLabel();
        lastName = new javax.swing.JLabel();
        age = new javax.swing.JLabel();
        dob = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        zip = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        pharmacy = new javax.swing.JLabel();
        street = new javax.swing.JLabel();
        occupation = new javax.swing.JLabel();

        createBtn.setText("Create");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        backBtn1.setText("<< Back");
        backBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtn1ActionPerformed(evt);
            }
        });

        ageTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ageTextFieldFocusLost(evt);
            }
        });

        jLabel4.setText("Age:");

        jLabel5.setText("Primary Doctor Name:");

        pharmacyTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pharmacyTextFieldFocusLost(evt);
            }
        });

        jLabel6.setText("Preffered Pharmacy:");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("PATIENT PROFILE");

        docComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("First Name:");

        firstNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstNameTextFieldFocusLost(evt);
            }
        });
        firstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextFieldActionPerformed(evt);
            }
        });

        lastNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lastNameTextFieldFocusLost(evt);
            }
        });

        jLabel8.setText("Last Name:");

        jLabel12.setText("Date of Birth:");

        jLabel10.setText("Street Address:");

        streetAddressTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetAddressTextFieldActionPerformed(evt);
            }
        });

        jLabel11.setText("City:");

        jLabel13.setText("Zip Code:");

        zipCodeTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                zipCodeTextFieldFocusLost(evt);
            }
        });

        jLabel14.setText("Occupation:");

        jLabel15.setText("Email ID:");

        emailTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailTextFieldFocusLost(evt);
            }
        });

        jLabel17.setText("Phone Number:");

        phoneNumberTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                phoneNumberTextFieldFocusLost(evt);
            }
        });
        phoneNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberTextFieldActionPerformed(evt);
            }
        });
        phoneNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phoneNumberTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                phoneNumberTextFieldKeyReleased(evt);
            }
        });

        dobTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dobTextFieldFocusLost(evt);
            }
        });
        dobTextField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                dobTextFieldInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        dobTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dobTextFieldPropertyChange(evt);
            }
        });

        cityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Gender:");

        buttonGroup1.add(male);
        male.setText("MALE");
        male.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                maleFocusLost(evt);
            }
        });

        buttonGroup1.add(female);
        female.setText("FEMALE");
        female.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                femaleFocusLost(evt);
            }
        });

        pharmacy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pharmacyFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(occupation, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(occupationTextField))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel17)
                                    .addGap(18, 18, 18)
                                    .addComponent(phoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(number, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(backBtn1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createBtn))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel15)
                                .addComponent(jLabel11))
                            .addGap(26, 26, 26)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(cityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addGap(18, 18, 18)
                                            .addComponent(zipCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(zip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(emailTextField)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel2)
                                .addComponent(jLabel12))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(dobTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(40, 40, 40)
                                            .addComponent(jLabel4))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(7, 7, 7)
                                            .addComponent(ageTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))))
                                .addComponent(streetAddressTextField)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(male)
                                            .addGap(18, 18, 18)
                                            .addComponent(female)
                                            .addGap(18, 18, 18)
                                            .addComponent(genderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(street, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(18, 18, 18)
                            .addComponent(docComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(pharmacyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(pharmacy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(41, 41, 41)
                                    .addComponent(firstNameTextField)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel8)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(218, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstName)
                    .addComponent(lastName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(age))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dobTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dob)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(male)
                    .addComponent(female)
                    .addComponent(genderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(streetAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(street)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zipCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11)
                    .addComponent(cityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(zip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(email)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(occupationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(phoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(number)
                    .addComponent(occupation))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(docComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(pharmacyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pharmacy)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createBtn)
                    .addComponent(backBtn1))
                .addContainerGap(196, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        // TODO add your handling code here:
        
        if (male.isSelected()) {
            gender = "male";
        } else if (female.isSelected()) {
            gender = "female";
        }
        
        if (firstNameTextField.getText().trim().isEmpty()) {
            firstName.setText("First Name cannot be blank!");
            firstNameTextField.setBackground(Color.yellow);
        } else if (!firstNameTextField.getText().matches("[a-zA-Z]*")) {
            firstName.setText("Please enter valid First Name!");
            firstNameTextField.setBackground(Color.yellow);
        } else if (lastNameTextField.getText().trim().isEmpty()) {
            lastName.setText("Last Name cannot be blank!");
            lastNameTextField.setBackground(Color.yellow);
        } else if (!lastNameTextField.getText().matches("[a-zA-Z]*")) {
            lastName.setText("Please enter valid Last Name!");
            lastNameTextField.setBackground(Color.yellow);
        } else if (dobTextField.getDate() == null) {
            JOptionPane.showMessageDialog(this,"Date of birth cannot be empty", "ERROR", JOptionPane.ERROR_MESSAGE);
            dobTextField.setBackground(Color.yellow);
        } else if (dobTextField.getDate().after(new Date())) {
            JOptionPane.showMessageDialog(this,"Date of birth must be valid", "ERROR", JOptionPane.ERROR_MESSAGE);
            dobTextField.setBackground(Color.yellow);
        } else if (!(ageTextField.getText().matches("\\d{1,3}"))) {
            age.setText("Age will only have digits");
            ageTextField.setBackground(Color.yellow);
        } else if (ageTextField.getText().trim().isEmpty()) {
            age.setText("Age cannot be blank");
            ageTextField.setBackground(Color.yellow);
        } else if (streetAddressTextField.getText().trim().isEmpty()) {
            street.setText("Street Address  cannot be blank!");
            streetAddressTextField.setBackground(Color.yellow);
        } else if (zipCodeTextField.getText().trim().isEmpty()) {
            zip.setText("Zip Code cannot be blank!");
            zipCodeTextField.setBackground(Color.yellow);
        } else if (!zipCodeTextField.getText().matches("\\d{5}")) {
            zip.setText("Please enter valid 5 digit Zip Code!");
            zipCodeTextField.setBackground(Color.yellow);
        } else if (emailTextField.getText().trim().isEmpty()) {
            email.setText("Email ID  cannot be blank!");
            emailTextField.setBackground(Color.yellow);
        } else if (!emailTextField.getText().matches(ePattern)) {
            email.setText("Please enter valid Email ID!");
            emailTextField.setBackground(Color.yellow);
        } else if (occupationTextField.getText().trim().isEmpty()) {
            occupation.setText("Please enter Occupation!");
            occupationTextField.setBackground(Color.yellow);
        } else if(!occupationTextField.getText().matches("[a-zA-Z0-9]*")) {
            occupation.setText("Occupation can have only digits and alphabets!");
            occupationTextField.setBackground(Color.yellow);
        } else if (phoneNumberTextField.getText().trim().isEmpty()) {
            number.setText("Phone Number field cannot be blank!");
            phoneNumberTextField.setBackground(Color.yellow);
        } else if (!phoneNumberTextField.getText().matches("\\d{10}")) {
            number.setText("Please enter valid 10 digit Phone Number!");
            phoneNumberTextField.setBackground(Color.yellow);
        } else if (gender == null) {
            genderLabel.setText("Please select a gender!!");
        } else if (pharmacyTextField.getText().trim().isEmpty()) {
            pharmacy.setText("Pharmacy cannot be blank!");
            pharmacyTextField.setBackground(Color.yellow);
        } else if (!pharmacyTextField.getText().matches("[a-zA-Z ]*")) {
            pharmacy.setText("Please enter valid Last Name!");
            pharmacyTextField.setBackground(Color.yellow);
        } else {

            UserAccount doctor = (UserAccount) docComboBox.getSelectedItem();

            Patient patient = new Patient();

            patient.setName(firstNameTextField.getText());
            patient.setLastName(lastNameTextField.getText());
            patient.setDob(dobTextField.getDate());
            patient.setAddress(streetAddressTextField.getText());
            patient.setTown(String.valueOf((Network) cityComboBox.getSelectedItem()));
            patient.setZipCode(Integer.parseInt(zipCodeTextField.getText()));
            patient.setOccupation(occupationTextField.getText());
            patient.setEmail(emailTextField.getText());
            patient.setPhoneNumber(Double.parseDouble(phoneNumberTextField.getText()));
            patient.setAge(Integer.parseInt(ageTextField.getText()));
            patient.setpDocName(doctor);
            patient.setPharmacy(pharmacyTextField.getText());
            patient.setGender(gender);

            patientOrganization.getPersonDirectory().getPersonList().add(patient);

            // Add to admin Work Queue for granting user access
            UserPriviligeWorkRequest request = new UserPriviligeWorkRequest();
            request.setMessage("Validate Patient and Grant Access");
            request.setSender(userAccount);
            request.setPatient(patient);
            request.setRequestDate(new Date());
            request.setStatus("Pending");

            Organization org = null;
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof PatientOrganization) {
                    org = organization;
                    break;
                }
            }
            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
            }
            
            try {
                TwilioRestClient client = new TwilioRestClient("ACed9063d440a1ce9ac3a8e17956d636d0", "12286f5126a24e62dcc171c1e3444901");

                // Build the parameters 
                List<NameValuePair> params = new ArrayList<NameValuePair>();
                params.add(new BasicNameValuePair("To", "+18577076049"));
                params.add(new BasicNameValuePair("From", "+12013405582"));
                params.add(new BasicNameValuePair("Body", "Registration successfull!! You will receive a email with the login credentials soon"));

                MessageFactory messageFactory = client.getAccount().getMessageFactory();
                Message message = messageFactory.create(params);
                System.out.println("Message Sent!!");

            } catch (TwilioRestException ex) {
                Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            JOptionPane.showMessageDialog(this, "Patient is added successfully and has been sent to Admin for validation. You will receive a mail as soon as account is ready!!", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            resetFields();
        }


    }//GEN-LAST:event_createBtnActionPerformed

    public void resetFields() {
        firstName.setText("");
        firstNameTextField.setText("");
        firstNameTextField.setBackground(Color.white);
        lastName.setText("");
        lastNameTextField.setText("");
        lastNameTextField.setBackground(Color.white);
        buttonGroup1.clearSelection();        
        street.setText("");
        streetAddressTextField.setText("");
        streetAddressTextField.setBackground(Color.white);
        cityComboBox.setSelectedIndex(0);
        zip.setText("");
        zipCodeTextField.setText("");
        zipCodeTextField.setBackground(Color.white);
        email.setText("");
        emailTextField.setText("");
        emailTextField.setBackground(Color.white);
        occupation.setText("");
        occupationTextField.setText("");
        occupationTextField.setBackground(Color.white);
        number.setText("");
        phoneNumberTextField.setText("");
        phoneNumberTextField.setBackground(Color.white);
        age.setText("");
        ageTextField.setText("");
        ageTextField.setBackground(Color.white);
        docComboBox.setSelectedIndex(0);
        pharmacy.setText("");
        pharmacyTextField.setText("");
        pharmacy.setBackground(Color.white);
        genderLabel.setText("");
        dobTextField.setCalendar(null);

    }

    private void backBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtn1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtn1ActionPerformed

    private void firstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldActionPerformed

    private void streetAddressTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetAddressTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetAddressTextFieldActionPerformed

    private void dobTextFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_dobTextFieldInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_dobTextFieldInputMethodTextChanged

    private void dobTextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dobTextFieldPropertyChange
        // TODO add your handling code here:
//        Date d = new Date();
//        int age = dobTextField.getY() - d.getYear();
//        ageTextField.setText(String.valueOf(age));
//        System.out.println(age);
    }//GEN-LAST:event_dobTextFieldPropertyChange

    private void phoneNumberTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneNumberTextFieldKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_phoneNumberTextFieldKeyPressed

    private void phoneNumberTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneNumberTextFieldKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_phoneNumberTextFieldKeyReleased

    private void phoneNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberTextFieldActionPerformed

    private void phoneNumberTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneNumberTextFieldFocusLost
        // TODO add your handling code here:
        final JTextComponent c = (JTextComponent) evt.getSource();
        String s = c.getText();

        if (evt.isTemporary()) {
            return;
        }
        if (!(s.matches("\\d{10}"))) {
            number.setText("Phone number should be of 10 digits.");
            phoneNumberTextField.setBackground(Color.yellow);
        } else if (s.trim().isEmpty()) {
            number.setText("Phone number cannot be blank");
            phoneNumberTextField.setBackground(Color.yellow);
        } else {
            phoneNumberTextField.setBackground(Color.white);
        }

    }//GEN-LAST:event_phoneNumberTextFieldFocusLost

    private void firstNameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameTextFieldFocusLost
        // TODO add your handling code here:
        final JTextComponent c = (JTextComponent) evt.getSource();
        String s = c.getText();

        if (evt.isTemporary()) {
            return;
        }
        if (!(s.matches("[a-zA-Z]+"))) {
            firstName.setText("First Name will only have alphabets");
            firstNameTextField.setBackground(Color.yellow);
        } else if (s.trim().isEmpty()) {
            firstName.setText("First Name cannot be blank");
            firstNameTextField.setBackground(Color.yellow);
        } else {
            firstNameTextField.setBackground(Color.white);
        }
    }//GEN-LAST:event_firstNameTextFieldFocusLost

    private void lastNameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameTextFieldFocusLost
        // TODO add your handling code here:
        final JTextComponent c = (JTextComponent) evt.getSource();
        String s = c.getText();

        if (evt.isTemporary()) {
            return;
        }
        if (!(s.matches("[a-zA-Z]+"))) {
            lastName.setText("Last Name will only have alphabets");
            lastNameTextField.setBackground(Color.yellow);
        } else if (s.trim().isEmpty()) {
            lastName.setText("Last Name cannot be blank");
            lastNameTextField.setBackground(Color.yellow);
        } else {
            lastNameTextField.setBackground(Color.white);
        }
    }//GEN-LAST:event_lastNameTextFieldFocusLost

    private void ageTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ageTextFieldFocusLost
        // TODO add your handling code here:
        final JTextComponent c = (JTextComponent) evt.getSource();
        String s = c.getText();

        if (evt.isTemporary()) {
            return;
        }
        if (!(s.matches("\\d{1,3}"))) {
            age.setText("Age will only have digits");
            ageTextField.setBackground(Color.yellow);
        } else if (s.trim().isEmpty()) {
            age.setText("Age cannot be blank");
            ageTextField.setBackground(Color.yellow);
        } else {
            ageTextField.setBackground(Color.white);
        }
    }//GEN-LAST:event_ageTextFieldFocusLost

    private void dobTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dobTextFieldFocusLost
        // TODO add your handling code here:
        final JTextComponent c = (JTextComponent) evt.getSource();
        String s = c.getText();

        if (evt.isTemporary()) {
            return;
        }
        if (dobTextField.getDate() == null) {
            dob.setText("Date of Birth cannot be blank");
            dobTextField.setBackground(Color.yellow);
        } else {
            dobTextField.setBackground(Color.white);
        }
    }//GEN-LAST:event_dobTextFieldFocusLost

    private void femaleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_femaleFocusLost
        // TODO add your handling code here:
//        final JTextComponent c = (JTextComponent) evt.getSource();
//        String s = c.getText();
//        
//        if (evt.isTemporary()) {
//            return;
//        }
//        if(!(male.isSelected()) && !(female.isSelected()))  {
//            genderLabel.setText("Gender cannot be blank");
//        }
    }//GEN-LAST:event_femaleFocusLost

    private void zipCodeTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_zipCodeTextFieldFocusLost
        // TODO add your handling code here:
        final JTextComponent c = (JTextComponent) evt.getSource();
        String s = c.getText();

        if (evt.isTemporary()) {
            return;
        }
        if (!(s.matches("\\d{5}"))) {
            zip.setText("Zip code will only have 5 digits");
            zipCodeTextField.setBackground(Color.yellow);
        } else if (s.trim().isEmpty()) {
            zip.setText("Zip code cannot be blank");
            zipCodeTextField.setBackground(Color.yellow);
        } else {
            zipCodeTextField.setBackground(Color.white);
        }
    }//GEN-LAST:event_zipCodeTextFieldFocusLost

    private void maleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_maleFocusLost
        // TODO add your handling code here:
//        final JTextComponent c = (JRadioButton) evt.getSource();
//        String s = c.getName()
//        
//        if (evt.isTemporary()) {
//            return;
//        }
//        if(!(male.isSelected()) && !(female.isSelected()))  {
//            genderLabel.setText("Gender cannot be blank");
//        }
    }//GEN-LAST:event_maleFocusLost

    private void emailTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTextFieldFocusLost
        // TODO add your handling code here:
        final JTextComponent c = (JTextComponent) evt.getSource();
        String s = c.getText();

        if (evt.isTemporary()) {
            return;
        }
        if (!(s.matches(ePattern))) {
            email.setText("Email should be in proper format");
            emailTextField.setBackground(Color.yellow);
        } else if (s.trim().isEmpty()) {
            email.setText("Email cannot be blank");
            emailTextField.setBackground(Color.yellow);
        } else {
            emailTextField.setBackground(Color.white);
        }
    }//GEN-LAST:event_emailTextFieldFocusLost

    private void pharmacyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pharmacyFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_pharmacyFocusLost

    private void pharmacyTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pharmacyTextFieldFocusLost
        // TODO add your handling code here:final 
        JTextComponent c = (JTextComponent) evt.getSource();
        String s = c.getText();

        if (evt.isTemporary()) {
            return;
        }
        if (!(s.matches("[a-zA-Z]+"))) {
            pharmacy.setText("Pharmacy Name will only have alphabets");
            pharmacyTextField.setBackground(Color.yellow);
        } else if (s.trim().isEmpty()) {
            pharmacy.setText("Pharmacy Name cannot be blank");
            pharmacyTextField.setBackground(Color.yellow);
        } else {
            pharmacyTextField.setBackground(Color.white);
        }
    }//GEN-LAST:event_pharmacyTextFieldFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel age;
    private javax.swing.JTextField ageTextField;
    private javax.swing.JButton backBtn1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cityComboBox;
    private javax.swing.JButton createBtn;
    private javax.swing.JLabel dob;
    private com.toedter.calendar.JDateChooser dobTextField;
    private javax.swing.JComboBox docComboBox;
    private javax.swing.JLabel email;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JRadioButton female;
    private javax.swing.JLabel firstName;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lastName;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JRadioButton male;
    private javax.swing.JLabel number;
    private javax.swing.JLabel occupation;
    private javax.swing.JTextField occupationTextField;
    private javax.swing.JLabel pharmacy;
    private javax.swing.JTextField pharmacyTextField;
    private javax.swing.JTextField phoneNumberTextField;
    private javax.swing.JLabel street;
    private javax.swing.JTextField streetAddressTextField;
    private javax.swing.JLabel zip;
    private javax.swing.JTextField zipCodeTextField;
    // End of variables declaration//GEN-END:variables
}
