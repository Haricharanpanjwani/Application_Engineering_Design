/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Business;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.Hospital.DiabeteOrganization;
import Business.Organization.Hospital.Organization;
import Business.Organization.Hospital.PatientOrganization;
import Business.Patient.Patient;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.UserPriviligeWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author hpanjwani
 */
public class ReferDoctorPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private WorkRequest request;
    private Enterprise enterprise;
    private Business business;
    private HospitalEnterprise hospEnterprise;

    private Patient patient;
    private String disease;

    /**
     * Creates new form ReferDoctorPanel
     */
    public ReferDoctorPanel(JPanel userProcessContainer, UserAccount account, WorkRequest request, Enterprise enterprise, Business business, Patient patient, String disease) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.request = request;
        this.enterprise = enterprise;
        this.business = business;
        
        this.patient = patient;
        this.disease = disease;
        
        docLabel.setText("Doctor Name  Dr. " + userAccount.getUsername());
        patientLabel.setText("Patient Name  Mr. " + patient.getName());
        diseaseLabel.setText("Symptoms suggest you have : " + this.disease);

        for (Network network : business.getNetworkList()) {
            for (Enterprise enter : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enter instanceof HospitalEnterprise) {
                    hospEnterprise = (HospitalEnterprise) enter;
                }
                break;
            }
        }
        
        patient = ((UserPriviligeWorkRequest) request).getPatient();
        
        docLabel.setText(userAccount.getUsername());
        patientLabel.setText(((UserPriviligeWorkRequest) request).getPatient().getName());
        diseaseLabel.setText(disease);

        populateHospitalCombo();
    }

    public void populateHospitalCombo() {
        hospitalComboBox.removeAllItems();

        for (Network network : business.getNetworkList()) {
            for (Enterprise enter : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enter instanceof HospitalEnterprise) {
                    hospitalComboBox.addItem(enter);
                    //populateDoctorCombo(enter);
                }
            }
        }
    }

    public void populateDoctorCombo(Enterprise enter) {
        doctorComboBox.removeAllItems();

        if (enter != null) {

            for (Organization org : enter.getOrganizationDirectory().getOrganizationList()) {
                if (org instanceof DiabeteOrganization) {
                    for (Person person : org.getPersonDirectory().getPersonList()) {
                        doctorComboBox.addItem(person);
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        diseaseLabel = new javax.swing.JLabel();
        docLabel = new javax.swing.JLabel();
        patientLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        hospitalComboBox = new javax.swing.JComboBox();
        doctorComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();

        diseaseLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        diseaseLabel.setText("<disease>");

        docLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        docLabel.setText("<doctorName>");

        patientLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        patientLabel.setText("<patientName>");

        jLabel1.setText("We suggest you to refer the person to a Specialist Doctor");

        jLabel2.setText("Here is the list of Doctor's Available");

        jLabel3.setText("Please select Hospital:");

        jLabel4.setText("Please select Doctor:");

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        nextBtn.setText("Refer to Specialist");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        hospitalComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        hospitalComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalComboBoxActionPerformed(evt);
            }
        });

        doctorComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel5.setText("Refer to Specialist Doctor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(backBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nextBtn))
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(doctorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(hospitalComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(docLabel)
                            .addComponent(patientLabel)
                            .addComponent(diseaseLabel)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel5)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(docLabel)
                .addGap(18, 18, 18)
                .addComponent(patientLabel)
                .addGap(18, 18, 18)
                .addComponent(diseaseLabel)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(hospitalComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(doctorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextBtn)
                    .addComponent(backBtn))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        // TODO add your handling code here:
        HospitalEnterprise hostenterprise = (HospitalEnterprise) hospitalComboBox.getSelectedItem();
        Person person = (Person) doctorComboBox.getSelectedItem();

        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you want to refer this patient?", "Warning", dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION) {
            
            UserPriviligeWorkRequest request_refer = new UserPriviligeWorkRequest();
            request_refer.setMessage("Please make a appointment");
            request_refer.setSender(userAccount);
            request_refer.setRequestDate(new Date());
            request_refer.setStatus("Referred");
            request_refer.setPatient(patient);
            
            
            //for(UserAccount ua : p)
            Organization org = null;
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof DiabeteOrganization) {
                    org = organization;
                    break;
                }
            }

            if (org != null) {
                for (UserAccount ua : org.getUserAccountDirectory().getUserAccountList()) {
                    if (ua.getEmployee().equals(person)) {
                        request_refer.setDoctor(ua);
                        ua.getWorkQueue().getWorkRequestList().add(request_refer);
                        break;
                    }
                }
            }
            
           userAccount.getWorkQueue().getWorkRequestList().add(request_refer);

            
            JOptionPane.showMessageDialog(this, "Patient " + patient + " has been successfully refered to Dr. " + person,
                                            "Information", JOptionPane.INFORMATION_MESSAGE);
           
        }
//        request.setStatus("Attended");
//
//        for (int i = 0; i < appoint.getPrescribeLabTest().size(); i++) {
//            System.out.println(appoint.getPrescribeLabTest().get(i));
//        }
//
//        UserPriviligeWorkRequest request_Lab = new UserPriviligeWorkRequest();
//        request_Lab.setMessage("Lab Test");
//        request_Lab.setSender(userAccount);
//        request_Lab.setPatient(((UserPriviligeWorkRequest) request).getPatient());
//        request_Lab.setRequestDate(new Date());
//        request_Lab.setStatus("Pending");
//
//        Organization org = null;
//        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
//            if (organization instanceof LabOrganization) {
//                org = organization;
//                break;
//            }
//        }
//        if (org != null) {
//            org.getWorkQueue().getWorkRequestList().add(request_Lab);
//            userAccount.getWorkQueue().getWorkRequestList().add(request_Lab);
//        }
//
//        SendLabTestPanel sendLabTestPanel = new SendLabTestPanel(userProcessContainer, userAccount, request_Lab);
//        userProcessContainer.add("SendLabTestPanel", sendLabTestPanel);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
    }//GEN-LAST:event_nextBtnActionPerformed

    private void hospitalComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalComboBoxActionPerformed
        // TODO add your handling code here:
        Enterprise enter = (Enterprise) hospitalComboBox.getSelectedItem();
        populateDoctorCombo(enter);
    }//GEN-LAST:event_hospitalComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel diseaseLabel;
    private javax.swing.JLabel docLabel;
    private javax.swing.JComboBox doctorComboBox;
    private javax.swing.JComboBox hospitalComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton nextBtn;
    private javax.swing.JLabel patientLabel;
    // End of variables declaration//GEN-END:variables
}
