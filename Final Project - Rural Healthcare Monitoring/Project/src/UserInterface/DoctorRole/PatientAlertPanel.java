/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Hospital.DoctorOrganization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.UserPriviligeWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author hpanjwani
 */
public class PatientAlertPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private DoctorOrganization docOrganization;
    private Enterprise enterprise;

    /**
     * Creates new form PatientHistoryPanel
     */
    public PatientAlertPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.docOrganization = organization;
        this.enterprise = enterprise;
        
        doctorLabel.setText("Welcome Doctor: " + doctorLabel);
        hospitalLabel.setText("Hospital Name: " + enterprise.getName());
        
        populateAlertTable();
    }

    public void populateAlertTable() {
        DefaultTableModel model = (DefaultTableModel) alertTable.getModel();
        model.setRowCount(0);

        for (WorkRequest request : docOrganization.getWorkQueue().getWorkRequestList()) {
            if ((request.getStatus().equals("Alert Sent")) || request.getStatus().equals("Alert Received")
                    || (request.getStatus().equals("Notified to Receptionist")) || request.getStatus().equals("Ambulance Dispatched")
                    ||request.getStatus().equals("Patient Notified") || (request.getStatus().equals("Medicine Prescribed"))) {

            Object[] row = new Object[6];
            row[0] = request;
            row[1] = request.getSender();
            row[2] = ((UserPriviligeWorkRequest) request).getPatient().getpDocName();
            row[3] = ((UserPriviligeWorkRequest) request).getPatient();
            row[4] = request.getRequestDate();
            row[5] = request.getStatus();

            model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        alertTable = new javax.swing.JTable();
        assignBtn = new javax.swing.JButton();
        requestBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        doctorLabel = new javax.swing.JLabel();
        hospitalLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("PATIENT ALERT TABLE");
        jLabel1.setToolTipText("");

        alertTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Receptionist Name", "Doctor Name", "Patient Name", "Appointment Date", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        alertTable.setToolTipText("Patient Alert Table");
        alertTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                alertTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(alertTable);

        assignBtn.setText("CHECK UP");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });

        requestBtn.setText("Process >>");
        requestBtn.setEnabled(false);
        requestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestBtnActionPerformed(evt);
            }
        });

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel13.setIcon(new javax.swing.ImageIcon("/Users/hpanjwani/Documents/NEU/1st Sem/5100 AED Lab/panjwani_hari_001664735/Project/images/provider-directories.jpg")); // NOI18N
        jLabel13.setToolTipText("Doctor Banner");

        doctorLabel.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        doctorLabel.setText("jLabel2");
        doctorLabel.setToolTipText("Doctor Name");

        hospitalLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hospitalLabel.setText("jLabel3");
        hospitalLabel.setToolTipText("Hospital Name");

        jButton1.setText("View Patient Profile");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Graph Representation");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backBtn)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(assignBtn)
                                    .addGap(297, 297, 297)
                                    .addComponent(requestBtn))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(465, 465, 465)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hospitalLabel)
                            .addComponent(doctorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(doctorLabel)
                .addGap(18, 18, 18)
                .addComponent(hospitalLabel)
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(requestBtn)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(assignBtn)
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addGap(18, 18, 18)
                .addComponent(backBtn)
                .addGap(285, 285, 285))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void alertTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alertTableMousePressed
        // TODO add your handling code here:
        int selectedRow = alertTable.getSelectedRow();

        TableCellRenderer renderer = alertTable.getCellRenderer(selectedRow, 5);
        Component component = alertTable.prepareRenderer(renderer, selectedRow, 5);
        Object value = (String) alertTable.getModel().getValueAt(selectedRow, 5);

        UserPriviligeWorkRequest request_alert = (UserPriviligeWorkRequest) alertTable.getValueAt(selectedRow, 0);

        Patient patient = request_alert.getPatient();
//
//        pNameTextField.setText(patient.getName());
//        //pIDTextField.setText(patient.getId());
//        ageTextField.setText(String.valueOf(patient.getAge()));
//        docNameTextField.setText(String.valueOf(patient.getpDocName()));
//        pharmacyTextField.setText(patient.getPharmacy());
//
//        VitalSignHistory vitalSignHistory = patient.getVitalSignList();
//        VitalSign vs = vitalSignHistory.getVitalSignList().get(0);
//
//        respRateTextField.setText(String.valueOf(vs.getRespRate()));
//        heartRateTextField.setText(String.valueOf(vs.getHeartRate()));
//        bpTextField.setText(String.valueOf(vs.getBp()));
//        weightTextField.setText(String.valueOf(vs.getWeight()));
//        timeTextField.setText(String.valueOf(vs.getTime()));
        
        if (value.toString().equals("Alert Sent")) {
            assignBtn.setEnabled(true);
            requestBtn.setEnabled(false);
        }
        else if (value.toString().equals("Alert Received")) {

            UserAccount account = (UserAccount) alertTable.getValueAt(selectedRow, 2);

            //Include if the user itself has assigned him that patient
            if (userAccount.equals(account)) {
                assignBtn.setEnabled(false);
                requestBtn.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "Alert is being seen by Dcotor " + account, "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                assignBtn.setEnabled(false);
                requestBtn.setEnabled(false);
            }
        } else  {
            JOptionPane.showMessageDialog(this, "Request is already forwaded!!", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            assignBtn.setEnabled(false);
            requestBtn.setEnabled(false);
        }
    }//GEN-LAST:event_alertTableMousePressed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed

        int selectedRow = alertTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row!!", "WARNING", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            UserPriviligeWorkRequest request_alert = (UserPriviligeWorkRequest) alertTable.getValueAt(selectedRow, 0);
            request_alert.setStatus("Alert Received");

            populateAlertTable();
        }
    }//GEN-LAST:event_assignBtnActionPerformed

    private void requestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestBtnActionPerformed

        int selectedRow = alertTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row!!", "WARNING", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            UserPriviligeWorkRequest request_alert = (UserPriviligeWorkRequest) alertTable.getValueAt(selectedRow, 0);
            request_alert.setReceiver(userAccount);
            //request.setStatus("Attended");

            ActionPanel actionPanel = new ActionPanel(userProcessContainer, userAccount, enterprise, request_alert);
            userProcessContainer.add("ActionPanel", actionPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_requestBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = alertTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row!!", "WARNING", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            UserPriviligeWorkRequest request_alert = (UserPriviligeWorkRequest) alertTable.getValueAt(selectedRow, 0);
            request_alert.setReceiver(userAccount);
            
            Patient patient = ((UserPriviligeWorkRequest) request_alert).getPatient();
            
            //request.setStatus("Attended");
            PatientMedicalHistoryPanel medicalHistoryPanel = new PatientMedicalHistoryPanel(userProcessContainer, userAccount, enterprise, patient);
            userProcessContainer.add("MedicalHistoryPanel", medicalHistoryPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = alertTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row!!", "WARNING", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            UserPriviligeWorkRequest request_alert = (UserPriviligeWorkRequest) alertTable.getValueAt(selectedRow, 0);
            request_alert.setReceiver(userAccount);
            
            Patient patient = ((UserPriviligeWorkRequest) request_alert).getPatient();
            GraphRepresentation graphRepresentation = new GraphRepresentation(userProcessContainer, userAccount, enterprise, patient);
            userProcessContainer.add("GraphRepresentation", graphRepresentation);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable alertTable;
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel doctorLabel;
    private javax.swing.JLabel hospitalLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton requestBtn;
    // End of variables declaration//GEN-END:variables
}
