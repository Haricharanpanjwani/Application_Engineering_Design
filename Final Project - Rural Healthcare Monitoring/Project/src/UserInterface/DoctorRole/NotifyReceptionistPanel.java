/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Hospital.Organization;
import Business.Organization.Hospital.PatientOrganization;
import Business.Organization.Hospital.ReceptionistOrganization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.UserPriviligeWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author hpanjwani
 */
public class NotifyReceptionistPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private ReceptionistOrganization receptionistOrganization;

    private Patient patient;

    private WorkRequest request_alert;

    /**
     * Creates new form RequestAmbulancePanel
     */
    public NotifyReceptionistPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, WorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.request_alert = request;

        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof ReceptionistOrganization) {
                receptionistOrganization = (ReceptionistOrganization) org;
            }
        }

        //notifyLabel.setText("Ambulance request has been sent to Receptionist");

        patient = ((UserPriviligeWorkRequest) request).getPatient();

        populateRequestTable();
    }

    public void populateRequestTable() {

        DefaultTableModel model = (DefaultTableModel) requestTable.getModel();
        model.setRowCount(0);

        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if ((request.getStatus().equals("Alert Sent")) || request.getStatus().equals("Alert Received")
                    || (request.getStatus().equals("Notified to Receptionist")) || request.getStatus().equals("Ambulance Dispatched")
                    || request.getStatus().equals("Patient Notified")) {
                if (((UserPriviligeWorkRequest) request).getPatient().equals(((UserPriviligeWorkRequest) request_alert).getPatient())) {
                    Object[] row = new Object[6];

                    //request.setMessage("")
                    row[0] = request;
                    row[1] = request.getSender();
                    row[2] = request.getReceiver();
                    row[3] = ((UserPriviligeWorkRequest) request).getPatient();
                    row[4] = request.getRequestDate();
                    row[5] = request.getStatus();

                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        requestBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Receptionist Name", "Doctor Name", "Patient Name", "Request Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                requestTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(requestTable);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("NOTIFY AMBULANCE REQUEST");

        requestBtn.setText("NOTIFY RECEPPTIONIST");
        requestBtn.setEnabled(false);
        requestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestBtnActionPerformed(evt);
            }
        });

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(requestBtn))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(jLabel1)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestBtn)
                    .addComponent(backBtn))
                .addContainerGap(257, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestBtnActionPerformed

        int selectedRow = requestTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row!!", "WARNING", JOptionPane.WARNING_MESSAGE);
            return;
        } else {

            UserPriviligeWorkRequest request_alert = (UserPriviligeWorkRequest) requestTable.getValueAt(selectedRow, 0);
            request_alert.setReceiver(userAccount);
            request_alert.setStatus("Notified to Receptionist");
            populateRequestTable();

            if (receptionistOrganization != null) {
                receptionistOrganization.getWorkQueue().getWorkRequestList().add(request_alert);
                userAccount.getWorkQueue().getWorkRequestList().add(request_alert);
            }

            JOptionPane.showMessageDialog(this, "Ambulance request has been sent to Receptionist", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_requestBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void requestTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestTableMousePressed
        // TODO add your handling code here:
        int selectedRow = requestTable.getSelectedRow();

        TableCellRenderer renderer = requestTable.getCellRenderer(selectedRow, 5);
        Component component = requestTable.prepareRenderer(renderer, selectedRow, 5);
        Object value = (String) requestTable.getModel().getValueAt(selectedRow, 5);

        if (value.toString().equals("Notified to Receptionist")) {
            requestBtn.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Receptionist is already been notified!!", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
        } else if(value.toString().equals("Alert Received"))  {
            requestBtn.setEnabled(true);
        } else {
            requestBtn.setEnabled(false);
        }
    }//GEN-LAST:event_requestTableMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton requestBtn;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
