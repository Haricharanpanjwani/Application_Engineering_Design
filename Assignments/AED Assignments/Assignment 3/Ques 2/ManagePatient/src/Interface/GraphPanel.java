/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Patient;
import Business.Person;
import Business.VitalSign;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author hpanjwani
 */
public class GraphPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private Person person;
    private Patient patient;
    private DefaultCategoryDataset vitalSignDataSet;
    private GraphPanel graphPanel;

    /**
     * Creates new form GraphPanel
     */
    public GraphPanel(Person person, JPanel userProcessContainer)   {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.person = person;
        
        patient = person.getPatientList().get(0);
        
        populateGraph();
    }
    
    public void populateGraph() {
      try   {
        vitalSignDataSet = new DefaultCategoryDataset();
          
        for(VitalSign vs : patient.getVitalSignHistory().getVitalSignList())   {
            
            vitalSignDataSet.addValue(vs.getRespRate(), "Respiration Rate", vs.getTime());
            vitalSignDataSet.addValue(vs.getHeartRate(), "Heart Rate", vs.getTime());
            vitalSignDataSet.addValue(vs.getBp(), "Blood Pressure", vs.getTime());
            vitalSignDataSet.addValue(vs.getWeight(), "Weight", vs.getTime());
        }
        
        JFreeChart chartFactory = ChartFactory.createBarChart3D("VitalSign Pattern", "Timestamp", "VitalSign", vitalSignDataSet, PlotOrientation.VERTICAL, true, true, false);      
        BarRenderer renderer = null;
        CategoryPlot plot = chartFactory.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.BLUE);
        renderer = new BarRenderer();
        
        ChartFrame frame = new ChartFrame("Bar Chart for VitalSign", chartFactory);
        frame.setVisible(true);
        frame.setSize(700, 700);
        
        ChartPanel panel = new ChartPanel(chartFactory);
        
        //this.removeAll();
        this.add(panel);
        this.updateUI();
      }
      catch(Exception e)    {
          System.out.println(e);
      }
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewGraph = new javax.swing.JPanel();
        backBtn = new javax.swing.JButton();

        javax.swing.GroupLayout viewGraphLayout = new javax.swing.GroupLayout(viewGraph);
        viewGraph.setLayout(viewGraphLayout);
        viewGraphLayout.setHorizontalGroup(
            viewGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 607, Short.MAX_VALUE)
        );
        viewGraphLayout.setVerticalGroup(
            viewGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 359, Short.MAX_VALUE)
        );

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewGraph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(viewGraph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(42, 42, 42))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel viewGraph;
    // End of variables declaration//GEN-END:variables
}
